{"ast":null,"code":"import React,{useState,useEffect}from'react';import{db}from'./firebase';import{collection,addDoc}from'firebase/firestore';import styles from'./PuzzleBoard.module.scss';// Add this props interface\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";// Use the typed props here\nfunction PuzzleBoard(_ref){let{difficulty,layout,user,onScore,onComplete}=_ref;const gridSizes={easy:4,medium:6,hard:8};const gridSize=gridSizes[difficulty]||4;const totalTiles=gridSize*gridSize;const[tiles,setTiles]=useState([]);const[flippedTiles,setFlippedTiles]=useState([]);const[matchedTiles,setMatchedTiles]=useState([]);const[moves,setMoves]=useState(0);const[timer,setTimer]=useState(0);const[gameStarted,setGameStarted]=useState(false);const[gameCompleted,setGameCompleted]=useState(false);// Initialize game\nuseEffect(()=>{const numbers=Array.from({length:totalTiles/2},(_,i)=>i+1);const shuffledTiles=[...numbers,...numbers].sort(()=>Math.random()-0.5);setTiles(shuffledTiles);setFlippedTiles([]);setMatchedTiles([]);setMoves(0);setTimer(0);setGameStarted(false);setGameCompleted(false);},[difficulty,layout,totalTiles]);// Timer effect\nuseEffect(()=>{if(gameStarted&&!gameCompleted){const interval=setInterval(()=>setTimer(prev=>prev+1),1000);return()=>clearInterval(interval);}},[gameStarted,gameCompleted]);// Check for matches\nuseEffect(()=>{if(flippedTiles.length===2){const[first,second]=flippedTiles;if(tiles[first]===tiles[second]){setMatchedTiles(prev=>[...prev,first,second]);setFlippedTiles([]);}else{setTimeout(()=>setFlippedTiles([]),1000);}}},[flippedTiles,tiles]);// Check game completion\nuseEffect(()=>{if(matchedTiles.length===totalTiles&&totalTiles>0){setGameCompleted(true);const score=Math.max(1000-moves*10-timer,100);if(user&&onScore){onScore(score,timer);// Save to Firestore\nsaveScore(score,timer);}if(onComplete){onComplete();}}},[matchedTiles.length,totalTiles,moves,timer,user,onScore,onComplete]);const saveScore=async(score,time)=>{if(!user)return;try{await addDoc(collection(db,'scores'),{userId:user.uid,userName:user.displayName||'Anonymous',score,time,difficulty,layout,createdAt:new Date()});}catch(error){console.error('Error saving score:',error);}};const handleTileClick=index=>{if(!gameStarted)setGameStarted(true);if(flippedTiles.length===2||flippedTiles.includes(index)||matchedTiles.includes(index)){return;}setFlippedTiles(prev=>[...prev,index]);setMoves(prev=>prev+1);};const resetGame=()=>{const numbers=Array.from({length:totalTiles/2},(_,i)=>i+1);const shuffledTiles=[...numbers,...numbers].sort(()=>Math.random()-0.5);setTiles(shuffledTiles);setFlippedTiles([]);setMatchedTiles([]);setMoves(0);setTimer(0);setGameStarted(false);setGameCompleted(false);};return/*#__PURE__*/_jsxs(\"div\",{className:styles.boardCard,children:[/*#__PURE__*/_jsxs(\"h3\",{className:styles.boardTitle,children:[\"Puzzle Board - \",difficulty.charAt(0).toUpperCase()+difficulty.slice(1),\" (\",gridSize,\"x\",gridSize,\")\"]}),/*#__PURE__*/_jsx(\"div\",{style:{'--grid-size':gridSize},className:styles.puzzleGrid,children:tiles.map((number,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.tile,\" \").concat(flippedTiles.includes(index)||matchedTiles.includes(index)?styles.flipped:'',\" \").concat(matchedTiles.includes(index)?styles.matched:''),onClick:()=>handleTileClick(index),children:/*#__PURE__*/_jsxs(\"div\",{className:styles.tileInner,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.tileFront}),/*#__PURE__*/_jsx(\"div\",{className:styles.tileBack,children:number})]})},index))}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Moves: \",moves,\" | Time: \",timer,\"s\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,className:styles.btn,children:\"New Game\"})]}),gameCompleted&&/*#__PURE__*/_jsxs(\"div\",{className:styles.congratsMsg,children:[\"\\uD83C\\uDF89 Congratulations! You completed the puzzle in \",moves,\" moves and \",timer,\" seconds!\",user&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",Math.max(1000-moves*10-timer,100)]})]})]});}export default PuzzleBoard;","map":{"version":3,"names":["React","useState","useEffect","db","collection","addDoc","styles","jsxs","_jsxs","jsx","_jsx","PuzzleBoard","_ref","difficulty","layout","user","onScore","onComplete","gridSizes","easy","medium","hard","gridSize","totalTiles","tiles","setTiles","flippedTiles","setFlippedTiles","matchedTiles","setMatchedTiles","moves","setMoves","timer","setTimer","gameStarted","setGameStarted","gameCompleted","setGameCompleted","numbers","Array","from","length","_","i","shuffledTiles","sort","Math","random","interval","setInterval","prev","clearInterval","first","second","setTimeout","score","max","saveScore","time","userId","uid","userName","displayName","createdAt","Date","error","console","handleTileClick","index","includes","resetGame","className","boardCard","children","boardTitle","charAt","toUpperCase","slice","style","puzzleGrid","map","number","concat","tile","flipped","matched","onClick","tileInner","tileFront","tileBack","textAlign","marginTop","btn","congratsMsg"],"sources":["C:/Users/MARCE/source/repos/CrazyPuzzle/web/src/PuzzleBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { User } from 'firebase/auth';\r\nimport { db } from './firebase';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport styles from './PuzzleBoard.module.scss';\r\n\r\n// Add this props interface\r\ninterface PuzzleBoardProps {\r\n  difficulty: 'easy' | 'medium' | 'hard' | string;\r\n  layout: string;\r\n  user?: User | null;\r\n  onScore?: (score: number, timer: number) => void;\r\n  onComplete?: () => void;\r\n}\r\n\r\n// Use the typed props here\r\nfunction PuzzleBoard({ difficulty, layout, user, onScore, onComplete }: PuzzleBoardProps) {\r\n  const gridSizes: Record<'easy' | 'medium' | 'hard', number> = { easy: 4, medium: 6, hard: 8 };\r\n  const gridSize = gridSizes[difficulty as 'easy' | 'medium' | 'hard'] || 4;\r\n  const totalTiles = gridSize * gridSize;\r\n  \r\n  const [tiles, setTiles] = useState<number[]>([]);\r\n  const [flippedTiles, setFlippedTiles] = useState<number[]>([]);\r\n  const [matchedTiles, setMatchedTiles] = useState<number[]>([]);\r\n  const [moves, setMoves] = useState(0);\r\n  const [timer, setTimer] = useState(0);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameCompleted, setGameCompleted] = useState(false);\r\n\r\n  // Initialize game\r\n  useEffect(() => {\r\n    const numbers = Array.from({ length: totalTiles / 2 }, (_, i) => i + 1);\r\n    const shuffledTiles = [...numbers, ...numbers].sort(() => Math.random() - 0.5);\r\n    setTiles(shuffledTiles);\r\n    setFlippedTiles([]);\r\n    setMatchedTiles([]);\r\n    setMoves(0);\r\n    setTimer(0);\r\n    setGameStarted(false);\r\n    setGameCompleted(false);\r\n  }, [difficulty, layout, totalTiles]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gameStarted && !gameCompleted) {\r\n      const interval = setInterval(() => setTimer(prev => prev + 1), 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [gameStarted, gameCompleted]);\r\n\r\n  // Check for matches\r\n  useEffect(() => {\r\n    if (flippedTiles.length === 2) {\r\n      const [first, second] = flippedTiles;\r\n      if (tiles[first] === tiles[second]) {\r\n        setMatchedTiles(prev => [...prev, first, second]);\r\n        setFlippedTiles([]);\r\n      } else {\r\n        setTimeout(() => setFlippedTiles([]), 1000);\r\n      }\r\n    }\r\n  }, [flippedTiles, tiles]);\r\n\r\n  // Check game completion\r\n  useEffect(() => {\r\n    if (matchedTiles.length === totalTiles && totalTiles > 0) {\r\n      setGameCompleted(true);\r\n      const score = Math.max(1000 - moves * 10 - timer, 100);\r\n      \r\n      if (user && onScore) {\r\n        onScore(score, timer);\r\n        // Save to Firestore\r\n        saveScore(score, timer);\r\n      }\r\n      \r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    }\r\n  }, [matchedTiles.length, totalTiles, moves, timer, user, onScore, onComplete]);\r\n\r\n  const saveScore = async (score: number, time: number) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      await addDoc(collection(db, 'scores'), {\r\n        userId: user.uid,\r\n        userName: user.displayName || 'Anonymous',\r\n        score,\r\n        time,\r\n        difficulty,\r\n        layout,\r\n        createdAt: new Date()\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving score:', error);\r\n    }\r\n  };\r\n\r\n  const handleTileClick = (index: number) => {\r\n    if (!gameStarted) setGameStarted(true);\r\n    \r\n    if (flippedTiles.length === 2 || flippedTiles.includes(index) || matchedTiles.includes(index)) {\r\n      return;\r\n    }\r\n\r\n    setFlippedTiles(prev => [...prev, index]);\r\n    setMoves(prev => prev + 1);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    const numbers = Array.from({ length: totalTiles / 2 }, (_, i) => i + 1);\r\n    const shuffledTiles = [...numbers, ...numbers].sort(() => Math.random() - 0.5);\r\n    setTiles(shuffledTiles);\r\n    setFlippedTiles([]);\r\n    setMatchedTiles([]);\r\n    setMoves(0);\r\n    setTimer(0);\r\n    setGameStarted(false);\r\n    setGameCompleted(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.boardCard}>\r\n      <h3 className={styles.boardTitle}>\r\n        Puzzle Board - {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)} ({gridSize}x{gridSize})\r\n      </h3>\r\n      \r\n      <div style={{ '--grid-size': gridSize } as React.CSSProperties} className={styles.puzzleGrid}>\r\n        {tiles.map((number, index) => (\r\n          <div\r\n            key={index}\r\n            className={`${styles.tile} ${flippedTiles.includes(index) || matchedTiles.includes(index) ? styles.flipped : ''} ${matchedTiles.includes(index) ? styles.matched : ''}`}\r\n            onClick={() => handleTileClick(index)}\r\n          >\r\n            <div className={styles.tileInner}>\r\n              <div className={styles.tileFront}></div>\r\n              <div className={styles.tileBack}>{number}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <p>Moves: {moves} | Time: {timer}s</p>\r\n        <button onClick={resetGame} className={styles.btn}>New Game</button>\r\n      </div>\r\n\r\n      {gameCompleted && (\r\n        <div className={styles.congratsMsg}>\r\n          🎉 Congratulations! You completed the puzzle in {moves} moves and {timer} seconds!\r\n          {user && <p>Score: {Math.max(1000 - moves * 10 - timer, 100)}</p>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PuzzleBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}