{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARCE\\\\source\\\\repos\\\\CrazyPuzzle\\\\web\\\\src\\\\PuzzleBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './PuzzleBoard.scss';\n\n// Add this props interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Use the typed props here\nfunction PuzzleBoard({\n  difficulty,\n  layout,\n  user,\n  onScore,\n  onComplete\n}) {\n  _s();\n  var _gridSizes;\n  const gridSizes = {\n    easy: 4,\n    medium: 6,\n    hard: 8\n  };\n  const gridSize = (_gridSizes = gridSizes[difficulty]) !== null && _gridSizes !== void 0 ? _gridSizes : 4;\n  const animalImages = useMemo(() => ['https://cdn-icons-png.flaticon.com/512/616/616408.png', 'https://cdn-icons-png.flaticon.com/512/616/616430.png', 'https://cdn-icons-png.flaticon.com/512/616/616415.png', 'https://cdn-icons-png.flaticon.com/512/616/616426.png', 'https://cdn-icons-png.flaticon.com/512/616/616418.png', 'https://cdn-icons-png.flaticon.com/512/616/616420.png', 'https://cdn-icons-png.flaticon.com/512/616/616424.png', 'https://cdn-icons-png.flaticon.com/512/616/616422.png'], []);\n  const generateTiles = useCallback(() => {\n    const totalTiles = gridSize * gridSize;\n    let values = [];\n    if (difficulty === 'easy') {\n      let pairsNeeded = totalTiles / 2;\n      let selectedImages = [];\n      for (let i = 0; i < pairsNeeded; i++) {\n        selectedImages.push(animalImages[i % animalImages.length]);\n      }\n      selectedImages.forEach(img => {\n        return values.push(img, img);\n      });\n    } else {\n      for (let i = 1; i <= totalTiles / 2; i++) {\n        values.push(i, i);\n      }\n    }\n    for (let i = values.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [values[i], values[j]] = [values[j], values[i]];\n    }\n    return values;\n  }, [difficulty, gridSize, animalImages]);\n  const [tiles, setTiles] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  useEffect(() => {\n    setTiles(generateTiles());\n    setFlipped([]);\n    setMatched([]);\n    setScore(0);\n    setTimer(0);\n    setIsActive(true);\n  }, [difficulty, layout, generateTiles]);\n  useEffect(() => {\n    let interval = null;\n    if (isActive && matched.length < tiles.length) {\n      interval = setInterval(() => {\n        setTimer(t => t + 1);\n      }, 1000);\n    } else if (!isActive || matched.length === tiles.length) {\n      if (interval) clearInterval(interval);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isActive, matched, tiles.length]);\n  useEffect(() => {\n    if (matched.length === tiles.length && matched.length > 0 && user) {\n      if (onScore) onScore(score, timer);\n      if (onComplete) onComplete();\n    }\n  }, [matched, tiles.length, score, timer, user, onScore, onComplete]);\n  const handleTileClick = idx => {\n    if (flipped.length === 2 || flipped.includes(idx) || matched.includes(idx)) return;\n    const newFlipped = [...flipped, idx];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      const [first, second] = newFlipped;\n      if (tiles[first] === tiles[second]) {\n        setTimeout(() => {\n          setMatched([...matched, first, second]);\n          setFlipped([]);\n          setScore(s => s + 10);\n        }, 700);\n      } else {\n        setTimeout(() => setFlipped([]), 700);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"board-title\",\n      children: \"Crazy Puzzle Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), layout === 'grid' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-grid\",\n      style: {\n        ['--grid-size']: gridSize\n      },\n      children: tiles.map((val, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleTileClick(idx),\n        className: `tile${flipped.includes(idx) || matched.includes(idx) ? ' flipped' : ''}`,\n        children: matched.includes(idx) || flipped.includes(idx) ? difficulty === 'easy' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: typeof val === 'string' ? val : '',\n          alt: \"animal\",\n          className: \"tile-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }, this) : val : '?'\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Other layouts coming soon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), matched.length === tiles.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"congrats-msg\",\n      children: [\"\\uD83C\\uDF89 Congratulations! You completed the puzzle.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 56\n      }, this), \"Final Score: \", score, \" | Time: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(PuzzleBoard, \"Y7GvB3cmHbsUevAhXF+6vNyZ12I=\");\n_c = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c;\n$RefreshReg$(_c, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","PuzzleBoard","difficulty","layout","user","onScore","onComplete","_s","_gridSizes","gridSizes","easy","medium","hard","gridSize","animalImages","generateTiles","totalTiles","values","pairsNeeded","selectedImages","i","push","length","forEach","img","j","Math","floor","random","tiles","setTiles","flipped","setFlipped","matched","setMatched","score","setScore","timer","setTimer","isActive","setIsActive","interval","setInterval","t","clearInterval","handleTileClick","idx","includes","newFlipped","first","second","setTimeout","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","map","val","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/MARCE/source/repos/CrazyPuzzle/web/src/PuzzleBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport type { User } from 'firebase/auth';\r\nimport './PuzzleBoard.scss';\r\n\r\n// Add this props interface\r\ninterface PuzzleBoardProps {\r\n  difficulty: 'easy' | 'medium' | 'hard' | string;\r\n  layout: string;\r\n  user?: User | null;\r\n  onScore?: (score: number, timer: number) => void;\r\n  onComplete?: () => void;\r\n}\r\n\r\n// Use the typed props here\r\nfunction PuzzleBoard({ difficulty, layout, user, onScore, onComplete }: PuzzleBoardProps) {\r\n  const gridSizes: Record<'easy' | 'medium' | 'hard', number> = { easy: 4, medium: 6, hard: 8 };\r\n  const gridSize = gridSizes[difficulty as 'easy' | 'medium' | 'hard'] ?? 4;\r\n\r\n  const animalImages = useMemo(() => [\r\n    'https://cdn-icons-png.flaticon.com/512/616/616408.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616430.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616415.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616426.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616418.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616420.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616424.png',\r\n    'https://cdn-icons-png.flaticon.com/512/616/616422.png',\r\n  ], []);\r\n\r\n  const generateTiles = useCallback(() => {\r\n    const totalTiles = gridSize * gridSize;\r\n    let values: (string | number)[] = [];\r\n    if (difficulty === 'easy') {\r\n      let pairsNeeded = totalTiles / 2;\r\n      let selectedImages: string[] = [];\r\n      for (let i = 0; i < pairsNeeded; i++) {\r\n        selectedImages.push(animalImages[i % animalImages.length]);\r\n      }\r\n      selectedImages.forEach(img => {\r\n        return values.push(img, img);\r\n      });\r\n    } else {\r\n      for (let i = 1; i <= totalTiles / 2; i++) {\r\n        values.push(i, i);\r\n      }\r\n    }\r\n    for (let i = values.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [values[i], values[j]] = [values[j], values[i]];\r\n    }\r\n    return values;\r\n  }, [difficulty, gridSize, animalImages]);\r\n\r\n  const [tiles, setTiles] = useState<(string | number)[]>([]);\r\n  const [flipped, setFlipped] = useState<number[]>([]);\r\n  const [matched, setMatched] = useState<number[]>([]);\r\n  const [score, setScore] = useState(0);\r\n  const [timer, setTimer] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTiles(generateTiles());\r\n    setFlipped([]);\r\n    setMatched([]);\r\n    setScore(0);\r\n    setTimer(0);\r\n    setIsActive(true);\r\n  }, [difficulty, layout, generateTiles]);\r\n\r\n  useEffect(() => {\r\n    let interval: ReturnType<typeof setInterval> | null = null;\r\n    if (isActive && matched.length < tiles.length) {\r\n      interval = setInterval(() => {\r\n        setTimer(t => t + 1);\r\n      }, 1000);\r\n    } else if (!isActive || matched.length === tiles.length) {\r\n      if (interval) clearInterval(interval);\r\n    }\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [isActive, matched, tiles.length]);\r\n\r\n  useEffect(() => {\r\n    if (matched.length === tiles.length && matched.length > 0 && user) {\r\n      if (onScore) onScore(score, timer);\r\n      if (onComplete) onComplete();\r\n    }\r\n  }, [matched, tiles.length, score, timer, user, onScore, onComplete]);\r\n\r\n  const handleTileClick = (idx: number) => {\r\n    if (flipped.length === 2 || flipped.includes(idx) || matched.includes(idx)) return;\r\n    const newFlipped = [...flipped, idx];\r\n    setFlipped(newFlipped);\r\n    if (newFlipped.length === 2) {\r\n      const [first, second] = newFlipped;\r\n      if (tiles[first] === tiles[second]) {\r\n        setTimeout(() => {\r\n          setMatched([...matched, first, second]);\r\n          setFlipped([]);\r\n          setScore(s => s + 10);\r\n        }, 700);\r\n      } else {\r\n        setTimeout(() => setFlipped([]), 700);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"board-card\">\r\n      <h2 className=\"board-title\">Crazy Puzzle Board</h2>\r\n      {layout === 'grid' ? (\r\n        <div\r\n          className=\"puzzle-grid\"\r\n          style={{ ['--grid-size' as string]: gridSize } as React.CSSProperties}\r\n        >\r\n          {tiles.map((val, idx) => (\r\n            <div\r\n              key={idx}\r\n              onClick={() => handleTileClick(idx)}\r\n              className={`tile${flipped.includes(idx) || matched.includes(idx) ? ' flipped' : ''}`}\r\n            >\r\n              {(matched.includes(idx) || flipped.includes(idx)) ? (\r\n                difficulty === 'easy' ? (\r\n                  <img src={typeof val === 'string' ? val : ''} alt=\"animal\" className=\"tile-img\" />\r\n                ) : (\r\n                  val\r\n                )\r\n              ) : '?'}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>Other layouts coming soon!</p>\r\n      )}\r\n      {matched.length === tiles.length && (\r\n        <div className=\"congrats-msg\">\r\n          🎉 Congratulations! You completed the puzzle.<br />Final Score: {score} | Time: {timer}s\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PuzzleBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}