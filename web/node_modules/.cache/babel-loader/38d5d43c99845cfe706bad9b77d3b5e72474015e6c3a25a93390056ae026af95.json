{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARCE\\\\source\\\\repos\\\\CrazyPuzzle\\\\web\\\\src\\\\Leaderboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, query, where, orderBy, limit, getDocs } from 'firebase/firestore';\nimport styles from './Leaderboard.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard({\n  difficulty,\n  layout,\n  score,\n  timer\n}) {\n  _s();\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchLeaderboard = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        console.log('Fetching leaderboard for:', {\n          difficulty,\n          layout\n        });\n\n        // Only try the complex query for grid layout (which works)\n        if (layout === 'grid') {\n          const scoresRef = collection(db, 'scores');\n          const q = query(scoresRef, where('difficulty', '==', difficulty), where('layout', '==', layout), orderBy('score', 'desc'), limit(10));\n          const querySnapshot = await getDocs(q);\n          const scores = querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setLeaderboard(scores);\n        } else {\n          // For non-grid layouts, show empty leaderboard since they're not implemented\n          setLeaderboard([]);\n        }\n      } catch (error) {\n        console.error('Error fetching leaderboard:', error);\n        setError('Unable to load leaderboard. This may be due to missing database indexes.');\n\n        // Fallback: try to get some scores without complex filtering\n        try {\n          const scoresRef = collection(db, 'scores');\n          const simpleQuery = query(scoresRef, limit(5));\n          const snapshot = await getDocs(simpleQuery);\n          const allScores = snapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          })).filter(scoreItem => scoreItem.difficulty === difficulty && scoreItem.layout === layout).sort((a, b) => b.score - a.score).slice(0, 10);\n          setLeaderboard(allScores);\n          setError(''); // Clear error if fallback works\n        } catch (fallbackError) {\n          console.error('Fallback query failed:', fallbackError);\n          setLeaderboard([]);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLeaderboard();\n  }, [difficulty, layout, score, timer]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leaderboardCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.leaderboardTitle,\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.noScores,\n        children: \"Loading leaderboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.leaderboardCard,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.leaderboardTitle,\n      children: [\"Leaderboard - \", difficulty.charAt(0).toUpperCase() + difficulty.slice(1), \" (\", layout, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff3cd',\n        color: '#856404',\n        padding: '10px',\n        borderRadius: '4px',\n        marginBottom: '15px',\n        fontSize: '0.9rem'\n      },\n      children: [\"\\u26A0\\uFE0F \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), layout !== 'grid' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.noScores,\n      children: [\"Leaderboard will be available when \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: layout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 46\n      }, this), \" layout is implemented.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : leaderboard.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.leaderboardTable,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: styles.rank,\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: styles.score,\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: styles.rank,\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [entry.time, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: styles.score,\n            children: entry.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, entry.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.noScores,\n      children: \"No scores yet for this difficulty and layout. Be the first to play!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"tlE5MagHgzW8wTsWvkufhHbvbqE=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","orderBy","limit","getDocs","styles","jsxDEV","_jsxDEV","Leaderboard","difficulty","layout","score","timer","_s","leaderboard","setLeaderboard","loading","setLoading","error","setError","fetchLeaderboard","console","log","scoresRef","q","querySnapshot","scores","docs","map","doc","id","data","simpleQuery","snapshot","allScores","filter","scoreItem","sort","a","b","slice","fallbackError","className","leaderboardCard","children","leaderboardTitle","fileName","_jsxFileName","lineNumber","columnNumber","noScores","charAt","toUpperCase","style","background","color","padding","borderRadius","marginBottom","fontSize","length","leaderboardTable","rank","entry","index","userName","time","_c","$RefreshReg$"],"sources":["C:/Users/MARCE/source/repos/CrazyPuzzle/web/src/Leaderboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { db } from './firebase';\r\nimport { collection, query, where, orderBy, limit, getDocs } from 'firebase/firestore';\r\nimport styles from './Leaderboard.module.scss';\r\n\r\ninterface LeaderboardProps {\r\n  difficulty: string;\r\n  layout: string;\r\n  score: number;\r\n  timer: number;\r\n}\r\n\r\ninterface Score {\r\n  id: string;\r\n  userName: string;\r\n  score: number;\r\n  time: number;\r\n  difficulty: string;\r\n  layout: string;\r\n  createdAt: any;\r\n}\r\n\r\nfunction Leaderboard({ difficulty, layout, score, timer }: LeaderboardProps) {\r\n  const [leaderboard, setLeaderboard] = useState<Score[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboard = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError('');\r\n        \r\n        console.log('Fetching leaderboard for:', { difficulty, layout });\r\n        \r\n        // Only try the complex query for grid layout (which works)\r\n        if (layout === 'grid') {\r\n          const scoresRef = collection(db, 'scores');\r\n          const q = query(\r\n            scoresRef,\r\n            where('difficulty', '==', difficulty),\r\n            where('layout', '==', layout),\r\n            orderBy('score', 'desc'),\r\n            limit(10)\r\n          );\r\n          \r\n          const querySnapshot = await getDocs(q);\r\n          const scores = querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n          })) as Score[];\r\n          \r\n          setLeaderboard(scores);\r\n        } else {\r\n          // For non-grid layouts, show empty leaderboard since they're not implemented\r\n          setLeaderboard([]);\r\n        }\r\n        \r\n      } catch (error: any) {\r\n        console.error('Error fetching leaderboard:', error);\r\n        setError('Unable to load leaderboard. This may be due to missing database indexes.');\r\n        \r\n        // Fallback: try to get some scores without complex filtering\r\n        try {\r\n          const scoresRef = collection(db, 'scores');\r\n          const simpleQuery = query(scoresRef, limit(5));\r\n          const snapshot = await getDocs(simpleQuery);\r\n          \r\n          const allScores = snapshot.docs\r\n            .map(doc => ({ id: doc.id, ...doc.data() } as Score))\r\n            .filter(scoreItem => scoreItem.difficulty === difficulty && scoreItem.layout === layout)\r\n            .sort((a, b) => b.score - a.score)\r\n            .slice(0, 10);\r\n            \r\n          setLeaderboard(allScores);\r\n          setError(''); // Clear error if fallback works\r\n        } catch (fallbackError) {\r\n          console.error('Fallback query failed:', fallbackError);\r\n          setLeaderboard([]);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchLeaderboard();\r\n  }, [difficulty, layout, score, timer]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={styles.leaderboardCard}>\r\n        <h3 className={styles.leaderboardTitle}>Leaderboard</h3>\r\n        <div className={styles.noScores}>Loading leaderboard...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.leaderboardCard}>\r\n      <h3 className={styles.leaderboardTitle}>\r\n        Leaderboard - {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)} ({layout})\r\n      </h3>\r\n      \r\n      {error && (\r\n        <div style={{ \r\n          background: '#fff3cd', \r\n          color: '#856404', \r\n          padding: '10px', \r\n          borderRadius: '4px', \r\n          marginBottom: '15px',\r\n          fontSize: '0.9rem'\r\n        }}>\r\n          ⚠️ {error}\r\n        </div>\r\n      )}\r\n      \r\n      {layout !== 'grid' ? (\r\n        <div className={styles.noScores}>\r\n          Leaderboard will be available when <strong>{layout}</strong> layout is implemented.\r\n        </div>\r\n      ) : leaderboard.length > 0 ? (\r\n        <table className={styles.leaderboardTable}>\r\n          <thead>\r\n            <tr>\r\n              <th className={styles.rank}>Rank</th>\r\n              <th>Player</th>\r\n              <th>Time</th>\r\n              <th className={styles.score}>Score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {leaderboard.map((entry, index) => (\r\n              <tr key={entry.id}>\r\n                <td className={styles.rank}>{index + 1}</td>\r\n                <td>{entry.userName}</td>\r\n                <td>{entry.time}s</td>\r\n                <td className={styles.score}>{entry.score}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div className={styles.noScores}>\r\n          No scores yet for this difficulty and layout. Be the first to play!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}