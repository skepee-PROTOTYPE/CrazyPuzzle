{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARCE\\\\source\\\\repos\\\\CrazyPuzzle\\\\web\\\\src\\\\PuzzleBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport styles from './PuzzleBoard.module.scss';\n\n// Add this props interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Use the typed props here\nfunction PuzzleBoard({\n  difficulty,\n  layout,\n  user,\n  onScore,\n  onComplete\n}) {\n  _s();\n  const gridSizes = {\n    easy: 4,\n    medium: 6,\n    hard: 8\n  };\n  const gridSize = gridSizes[difficulty] || 4;\n  const totalTiles = gridSize * gridSize;\n  const [tiles, setTiles] = useState([]);\n  const [flippedTiles, setFlippedTiles] = useState([]);\n  const [matchedTiles, setMatchedTiles] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameCompleted, setGameCompleted] = useState(false);\n\n  // Initialize game\n  useEffect(() => {\n    const numbers = Array.from({\n      length: totalTiles / 2\n    }, (_, i) => i + 1);\n    const shuffledTiles = [...numbers, ...numbers].sort(() => Math.random() - 0.5);\n    setTiles(shuffledTiles);\n    setFlippedTiles([]);\n    setMatchedTiles([]);\n    setMoves(0);\n    setTimer(0);\n    setGameStarted(false);\n    setGameCompleted(false);\n  }, [difficulty, layout, totalTiles]);\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameCompleted) {\n      const interval = setInterval(() => setTimer(prev => prev + 1), 1000);\n      return () => clearInterval(interval);\n    }\n  }, [gameStarted, gameCompleted]);\n\n  // Check for matches\n  useEffect(() => {\n    if (flippedTiles.length === 2) {\n      const [first, second] = flippedTiles;\n      if (tiles[first] === tiles[second]) {\n        setMatchedTiles(prev => [...prev, first, second]);\n        setFlippedTiles([]);\n      } else {\n        setTimeout(() => setFlippedTiles([]), 1000);\n      }\n    }\n  }, [flippedTiles, tiles]);\n\n  // Check game completion\n  useEffect(() => {\n    if (matchedTiles.length === totalTiles && totalTiles > 0) {\n      setGameCompleted(true);\n      const score = Math.max(1000 - moves * 10 - timer, 100);\n      if (user && onScore) {\n        onScore(score, timer);\n        // Save to Firestore\n        saveScore(score, timer);\n      }\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [matchedTiles.length, totalTiles, moves, timer, user, onScore, onComplete]);\n  const saveScore = async (score, time) => {\n    if (!user) return;\n    try {\n      await addDoc(collection(db, 'scores'), {\n        userId: user.uid,\n        userName: user.displayName || 'Anonymous',\n        score,\n        time,\n        difficulty,\n        layout,\n        createdAt: new Date()\n      });\n    } catch (error) {\n      console.error('Error saving score:', error);\n    }\n  };\n  const handleTileClick = index => {\n    if (!gameStarted) setGameStarted(true);\n    if (flippedTiles.length === 2 || flippedTiles.includes(index) || matchedTiles.includes(index)) {\n      return;\n    }\n    setFlippedTiles(prev => [...prev, index]);\n    setMoves(prev => prev + 1);\n  };\n  const resetGame = () => {\n    const numbers = Array.from({\n      length: totalTiles / 2\n    }, (_, i) => i + 1);\n    const shuffledTiles = [...numbers, ...numbers].sort(() => Math.random() - 0.5);\n    setTiles(shuffledTiles);\n    setFlippedTiles([]);\n    setMatchedTiles([]);\n    setMoves(0);\n    setTimer(0);\n    setGameStarted(false);\n    setGameCompleted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.boardCard,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.boardTitle,\n      children: [\"Puzzle Board - \", difficulty.charAt(0).toUpperCase() + difficulty.slice(1), \" (\", gridSize, \"x\", gridSize, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        '--grid-size': gridSize\n      },\n      className: styles.puzzleGrid,\n      children: tiles.map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.tile} ${flippedTiles.includes(index) || matchedTiles.includes(index) ? styles.flipped : ''} ${matchedTiles.includes(index) ? styles.matched : ''}`,\n        onClick: () => handleTileClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tileInner,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tileFront\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tileBack,\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Moves: \", moves, \" | Time: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: styles.btn,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), gameCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.congratsMsg,\n      children: [\"\\uD83C\\uDF89 Congratulations! You completed the puzzle in \", moves, \" moves and \", timer, \" seconds!\", user && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", Math.max(1000 - moves * 10 - timer, 100)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(PuzzleBoard, \"fRrBOgGByan/fLp3WRQ/UJuDNfA=\");\n_c = PuzzleBoard;\nexport default PuzzleBoard;\nvar _c;\n$RefreshReg$(_c, \"PuzzleBoard\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","addDoc","styles","jsxDEV","_jsxDEV","PuzzleBoard","difficulty","layout","user","onScore","onComplete","_s","gridSizes","easy","medium","hard","gridSize","totalTiles","tiles","setTiles","flippedTiles","setFlippedTiles","matchedTiles","setMatchedTiles","moves","setMoves","timer","setTimer","gameStarted","setGameStarted","gameCompleted","setGameCompleted","numbers","Array","from","length","_","i","shuffledTiles","sort","Math","random","interval","setInterval","prev","clearInterval","first","second","setTimeout","score","max","saveScore","time","userId","uid","userName","displayName","createdAt","Date","error","console","handleTileClick","index","includes","resetGame","className","boardCard","children","boardTitle","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","style","puzzleGrid","map","number","tile","flipped","matched","onClick","tileInner","tileFront","tileBack","textAlign","marginTop","btn","congratsMsg","_c","$RefreshReg$"],"sources":["C:/Users/MARCE/source/repos/CrazyPuzzle/web/src/PuzzleBoard.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { User } from 'firebase/auth';\r\nimport { db } from './firebase';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport styles from './PuzzleBoard.module.scss';\r\n\r\n// Add this props interface\r\ninterface PuzzleBoardProps {\r\n  difficulty: 'easy' | 'medium' | 'hard' | string;\r\n  layout: string;\r\n  user?: User | null;\r\n  onScore?: (score: number, timer: number) => void;\r\n  onComplete?: () => void;\r\n}\r\n\r\n// Use the typed props here\r\nfunction PuzzleBoard({ difficulty, layout, user, onScore, onComplete }: PuzzleBoardProps) {\r\n  const gridSizes: Record<'easy' | 'medium' | 'hard', number> = { easy: 4, medium: 6, hard: 8 };\r\n  const gridSize = gridSizes[difficulty as 'easy' | 'medium' | 'hard'] || 4;\r\n  const totalTiles = gridSize * gridSize;\r\n  \r\n  const [tiles, setTiles] = useState<number[]>([]);\r\n  const [flippedTiles, setFlippedTiles] = useState<number[]>([]);\r\n  const [matchedTiles, setMatchedTiles] = useState<number[]>([]);\r\n  const [moves, setMoves] = useState(0);\r\n  const [timer, setTimer] = useState(0);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameCompleted, setGameCompleted] = useState(false);\r\n\r\n  // Initialize game\r\n  useEffect(() => {\r\n    const numbers = Array.from({ length: totalTiles / 2 }, (_, i) => i + 1);\r\n    const shuffledTiles = [...numbers, ...numbers].sort(() => Math.random() - 0.5);\r\n    setTiles(shuffledTiles);\r\n    setFlippedTiles([]);\r\n    setMatchedTiles([]);\r\n    setMoves(0);\r\n    setTimer(0);\r\n    setGameStarted(false);\r\n    setGameCompleted(false);\r\n  }, [difficulty, layout, totalTiles]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gameStarted && !gameCompleted) {\r\n      const interval = setInterval(() => setTimer(prev => prev + 1), 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [gameStarted, gameCompleted]);\r\n\r\n  // Check for matches\r\n  useEffect(() => {\r\n    if (flippedTiles.length === 2) {\r\n      const [first, second] = flippedTiles;\r\n      if (tiles[first] === tiles[second]) {\r\n        setMatchedTiles(prev => [...prev, first, second]);\r\n        setFlippedTiles([]);\r\n      } else {\r\n        setTimeout(() => setFlippedTiles([]), 1000);\r\n      }\r\n    }\r\n  }, [flippedTiles, tiles]);\r\n\r\n  // Check game completion\r\n  useEffect(() => {\r\n    if (matchedTiles.length === totalTiles && totalTiles > 0) {\r\n      setGameCompleted(true);\r\n      const score = Math.max(1000 - moves * 10 - timer, 100);\r\n      \r\n      if (user && onScore) {\r\n        onScore(score, timer);\r\n        // Save to Firestore\r\n        saveScore(score, timer);\r\n      }\r\n      \r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    }\r\n  }, [matchedTiles.length, totalTiles, moves, timer, user, onScore, onComplete]);\r\n\r\n  const saveScore = async (score: number, time: number) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      await addDoc(collection(db, 'scores'), {\r\n        userId: user.uid,\r\n        userName: user.displayName || 'Anonymous',\r\n        score,\r\n        time,\r\n        difficulty,\r\n        layout,\r\n        createdAt: new Date()\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving score:', error);\r\n    }\r\n  };\r\n\r\n  const handleTileClick = (index: number) => {\r\n    if (!gameStarted) setGameStarted(true);\r\n    \r\n    if (flippedTiles.length === 2 || flippedTiles.includes(index) || matchedTiles.includes(index)) {\r\n      return;\r\n    }\r\n\r\n    setFlippedTiles(prev => [...prev, index]);\r\n    setMoves(prev => prev + 1);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    const numbers = Array.from({ length: totalTiles / 2 }, (_, i) => i + 1);\r\n    const shuffledTiles = [...numbers, ...numbers].sort(() => Math.random() - 0.5);\r\n    setTiles(shuffledTiles);\r\n    setFlippedTiles([]);\r\n    setMatchedTiles([]);\r\n    setMoves(0);\r\n    setTimer(0);\r\n    setGameStarted(false);\r\n    setGameCompleted(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.boardCard}>\r\n      <h3 className={styles.boardTitle}>\r\n        Puzzle Board - {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)} ({gridSize}x{gridSize})\r\n      </h3>\r\n      \r\n      <div style={{ '--grid-size': gridSize } as React.CSSProperties} className={styles.puzzleGrid}>\r\n        {tiles.map((number, index) => (\r\n          <div\r\n            key={index}\r\n            className={`${styles.tile} ${flippedTiles.includes(index) || matchedTiles.includes(index) ? styles.flipped : ''} ${matchedTiles.includes(index) ? styles.matched : ''}`}\r\n            onClick={() => handleTileClick(index)}\r\n          >\r\n            <div className={styles.tileInner}>\r\n              <div className={styles.tileFront}></div>\r\n              <div className={styles.tileBack}>{number}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <p>Moves: {moves} | Time: {timer}s</p>\r\n        <button onClick={resetGame} className={styles.btn}>New Game</button>\r\n      </div>\r\n\r\n      {gameCompleted && (\r\n        <div className={styles.congratsMsg}>\r\n          🎉 Congratulations! You completed the puzzle in {moves} moves and {timer} seconds!\r\n          {user && <p>Score: {Math.max(1000 - moves * 10 - timer, 100)}</p>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PuzzleBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAA8B,OAAO;AAExE,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AACvD,OAAOC,MAAM,MAAM,2BAA2B;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA;AACA,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC,MAAM;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAA6B,CAAC,EAAE;EAAAC,EAAA;EACxF,MAAMC,SAAqD,GAAG;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC;EAC7F,MAAMC,QAAQ,GAAGJ,SAAS,CAACN,UAAU,CAA+B,IAAI,CAAC;EACzE,MAAMW,UAAU,GAAGD,QAAQ,GAAGA,QAAQ;EAEtC,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAW,EAAE,CAAC;EAC9D,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAW,EAAE,CAAC;EAC9D,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAElB,UAAU,GAAG;IAAE,CAAC,EAAE,CAACmB,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;IACvE,MAAMC,aAAa,GAAG,CAAC,GAAGN,OAAO,EAAE,GAAGA,OAAO,CAAC,CAACO,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9EtB,QAAQ,CAACmB,aAAa,CAAC;IACvBjB,eAAe,CAAC,EAAE,CAAC;IACnBE,eAAe,CAAC,EAAE,CAAC;IACnBE,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXE,cAAc,CAAC,KAAK,CAAC;IACrBE,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC,EAAE,CAACzB,UAAU,EAAEC,MAAM,EAAEU,UAAU,CAAC,CAAC;;EAEpC;EACAnB,SAAS,CAAC,MAAM;IACd,IAAI8B,WAAW,IAAI,CAACE,aAAa,EAAE;MACjC,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAMhB,QAAQ,CAACiB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MACpE,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACd,WAAW,EAAEE,aAAa,CAAC,CAAC;;EAEhC;EACAhC,SAAS,CAAC,MAAM;IACd,IAAIsB,YAAY,CAACe,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAM,CAACW,KAAK,EAAEC,MAAM,CAAC,GAAG3B,YAAY;MACpC,IAAIF,KAAK,CAAC4B,KAAK,CAAC,KAAK5B,KAAK,CAAC6B,MAAM,CAAC,EAAE;QAClCxB,eAAe,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEE,KAAK,EAAEC,MAAM,CAAC,CAAC;QACjD1B,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACL2B,UAAU,CAAC,MAAM3B,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC7C;IACF;EACF,CAAC,EAAE,CAACD,YAAY,EAAEF,KAAK,CAAC,CAAC;;EAEzB;EACApB,SAAS,CAAC,MAAM;IACd,IAAIwB,YAAY,CAACa,MAAM,KAAKlB,UAAU,IAAIA,UAAU,GAAG,CAAC,EAAE;MACxDc,gBAAgB,CAAC,IAAI,CAAC;MACtB,MAAMkB,KAAK,GAAGT,IAAI,CAACU,GAAG,CAAC,IAAI,GAAG1B,KAAK,GAAG,EAAE,GAAGE,KAAK,EAAE,GAAG,CAAC;MAEtD,IAAIlB,IAAI,IAAIC,OAAO,EAAE;QACnBA,OAAO,CAACwC,KAAK,EAAEvB,KAAK,CAAC;QACrB;QACAyB,SAAS,CAACF,KAAK,EAAEvB,KAAK,CAAC;MACzB;MAEA,IAAIhB,UAAU,EAAE;QACdA,UAAU,CAAC,CAAC;MACd;IACF;EACF,CAAC,EAAE,CAACY,YAAY,CAACa,MAAM,EAAElB,UAAU,EAAEO,KAAK,EAAEE,KAAK,EAAElB,IAAI,EAAEC,OAAO,EAAEC,UAAU,CAAC,CAAC;EAE9E,MAAMyC,SAAS,GAAG,MAAAA,CAAOF,KAAa,EAAEG,IAAY,KAAK;IACvD,IAAI,CAAC5C,IAAI,EAAE;IAEX,IAAI;MACF,MAAMP,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,EAAE;QACrCsD,MAAM,EAAE7C,IAAI,CAAC8C,GAAG;QAChBC,QAAQ,EAAE/C,IAAI,CAACgD,WAAW,IAAI,WAAW;QACzCP,KAAK;QACLG,IAAI;QACJ9C,UAAU;QACVC,MAAM;QACNkD,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,eAAe,GAAIC,KAAa,IAAK;IACzC,IAAI,CAAClC,WAAW,EAAEC,cAAc,CAAC,IAAI,CAAC;IAEtC,IAAIT,YAAY,CAACe,MAAM,KAAK,CAAC,IAAIf,YAAY,CAAC2C,QAAQ,CAACD,KAAK,CAAC,IAAIxC,YAAY,CAACyC,QAAQ,CAACD,KAAK,CAAC,EAAE;MAC7F;IACF;IAEAzC,eAAe,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEkB,KAAK,CAAC,CAAC;IACzCrC,QAAQ,CAACmB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMoB,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMhC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAElB,UAAU,GAAG;IAAE,CAAC,EAAE,CAACmB,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;IACvE,MAAMC,aAAa,GAAG,CAAC,GAAGN,OAAO,EAAE,GAAGA,OAAO,CAAC,CAACO,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9EtB,QAAQ,CAACmB,aAAa,CAAC;IACvBjB,eAAe,CAAC,EAAE,CAAC;IACnBE,eAAe,CAAC,EAAE,CAAC;IACnBE,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXE,cAAc,CAAC,KAAK,CAAC;IACrBE,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACE3B,OAAA;IAAK6D,SAAS,EAAE/D,MAAM,CAACgE,SAAU;IAAAC,QAAA,gBAC/B/D,OAAA;MAAI6D,SAAS,EAAE/D,MAAM,CAACkE,UAAW;MAAAD,QAAA,GAAC,iBACjB,EAAC7D,UAAU,CAAC+D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGhE,UAAU,CAACiE,KAAK,CAAC,CAAC,CAAC,EAAC,IAAE,EAACvD,QAAQ,EAAC,GAAC,EAACA,QAAQ,EAAC,GAClG;IAAA;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELvE,OAAA;MAAKwE,KAAK,EAAE;QAAE,aAAa,EAAE5D;MAAS,CAAyB;MAACiD,SAAS,EAAE/D,MAAM,CAAC2E,UAAW;MAAAV,QAAA,EAC1FjD,KAAK,CAAC4D,GAAG,CAAC,CAACC,MAAM,EAAEjB,KAAK,kBACvB1D,OAAA;QAEE6D,SAAS,EAAE,GAAG/D,MAAM,CAAC8E,IAAI,IAAI5D,YAAY,CAAC2C,QAAQ,CAACD,KAAK,CAAC,IAAIxC,YAAY,CAACyC,QAAQ,CAACD,KAAK,CAAC,GAAG5D,MAAM,CAAC+E,OAAO,GAAG,EAAE,IAAI3D,YAAY,CAACyC,QAAQ,CAACD,KAAK,CAAC,GAAG5D,MAAM,CAACgF,OAAO,GAAG,EAAE,EAAG;QACxKC,OAAO,EAAEA,CAAA,KAAMtB,eAAe,CAACC,KAAK,CAAE;QAAAK,QAAA,eAEtC/D,OAAA;UAAK6D,SAAS,EAAE/D,MAAM,CAACkF,SAAU;UAAAjB,QAAA,gBAC/B/D,OAAA;YAAK6D,SAAS,EAAE/D,MAAM,CAACmF;UAAU;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxCvE,OAAA;YAAK6D,SAAS,EAAE/D,MAAM,CAACoF,QAAS;YAAAnB,QAAA,EAAEY;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC,GAPDb,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENvE,OAAA;MAAKwE,KAAK,EAAE;QAAEW,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAArB,QAAA,gBACrD/D,OAAA;QAAA+D,QAAA,GAAG,SAAO,EAAC3C,KAAK,EAAC,WAAS,EAACE,KAAK,EAAC,GAAC;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtCvE,OAAA;QAAQ+E,OAAO,EAAEnB,SAAU;QAACC,SAAS,EAAE/D,MAAM,CAACuF,GAAI;QAAAtB,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,EAEL7C,aAAa,iBACZ1B,OAAA;MAAK6D,SAAS,EAAE/D,MAAM,CAACwF,WAAY;MAAAvB,QAAA,GAAC,4DACc,EAAC3C,KAAK,EAAC,aAAW,EAACE,KAAK,EAAC,WACzE,EAAClB,IAAI,iBAAIJ,OAAA;QAAA+D,QAAA,GAAG,SAAO,EAAC3B,IAAI,CAACU,GAAG,CAAC,IAAI,GAAG1B,KAAK,GAAG,EAAE,GAAGE,KAAK,EAAE,GAAG,CAAC;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChE,EAAA,CA5IQN,WAAW;AAAAsF,EAAA,GAAXtF,WAAW;AA8IpB,eAAeA,WAAW;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}