"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.availablePrompts = void 0;
const core_1 = require("./core");
const dataconnect_1 = require("./dataconnect");
const crashlytics_1 = require("./crashlytics");
const prompts = {
    core: core_1.corePrompts,
    firestore: [],
    storage: [],
    dataconnect: dataconnect_1.dataconnectPrompts,
    auth: [],
    messaging: [],
    remoteconfig: [],
    crashlytics: crashlytics_1.crashlyticsPrompts,
    apphosting: [],
    database: [],
};
function namespacePrompts(promptsToNamespace, feature) {
    return promptsToNamespace.map((p) => {
        const newPrompt = Object.assign({}, p);
        newPrompt.mcp = Object.assign({}, p.mcp);
        if (newPrompt.mcp.omitPrefix) {
        }
        else if (feature === "core") {
            newPrompt.mcp.name = `firebase:${p.mcp.name}`;
        }
        else {
            newPrompt.mcp.name = `${feature}:${p.mcp.name}`;
        }
        newPrompt.mcp._meta = Object.assign(Object.assign({}, p.mcp._meta), { feature });
        return newPrompt;
    });
}
function availablePrompts(features) {
    const allPrompts = namespacePrompts(prompts["core"], "core");
    if (!features) {
        features = Object.keys(prompts).filter((f) => f !== "core");
    }
    for (const feature of features) {
        if (prompts[feature] && feature !== "core") {
            allPrompts.push(...namespacePrompts(prompts[feature], feature));
        }
    }
    return allPrompts;
}
exports.availablePrompts = availablePrompts;
