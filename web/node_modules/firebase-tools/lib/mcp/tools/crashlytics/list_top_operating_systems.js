"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.list_top_operating_systems = void 0;
const zod_1 = require("zod");
const tool_1 = require("../../tool");
const util_1 = require("../../util");
const listTopOperatingSystems_1 = require("../../../crashlytics/listTopOperatingSystems");
const constants_1 = require("./constants");
exports.list_top_operating_systems = (0, tool_1.tool)({
    name: "list_top_operating_systems",
    description: "List the top operating systems from Crashlytics for an application.",
    inputSchema: zod_1.z.object({
        app_id: constants_1.APP_ID_FIELD,
        issue_id: zod_1.z.string().optional().describe("The issue id to filter on"),
        os_count: zod_1.z
            .number()
            .optional()
            .default(10)
            .describe("Number of operating systems that needs to be fetched. Defaults to 10 if unspecified."),
    }),
    annotations: {
        title: "List Top Crashlytics Operating Systems.",
        readOnlyHint: true,
    },
    _meta: {
        requiresAuth: true,
    },
}, async ({ app_id, issue_id, os_count }) => {
    if (!app_id)
        return (0, util_1.mcpError)(`Must specify 'app_id' parameter.`);
    os_count !== null && os_count !== void 0 ? os_count : (os_count = 10);
    return (0, util_1.toContent)(await (0, listTopOperatingSystems_1.listTopOperatingSystems)(app_id, os_count, issue_id));
});
