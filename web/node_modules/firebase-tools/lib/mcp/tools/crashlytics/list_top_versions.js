"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.list_top_versions = void 0;
const zod_1 = require("zod");
const tool_1 = require("../../tool");
const util_1 = require("../../util");
const listTopVersions_1 = require("../../../crashlytics/listTopVersions");
const constants_1 = require("./constants");
exports.list_top_versions = (0, tool_1.tool)({
    name: "list_top_versions",
    description: "List the top versions from Crashlytics for an application.",
    inputSchema: zod_1.z.object({
        app_id: constants_1.APP_ID_FIELD,
        issue_id: zod_1.z.string().optional().describe("The issue id to filter on"),
        version_count: zod_1.z
            .number()
            .optional()
            .default(10)
            .describe("Number of versions that needs to be fetched. Defaults to 10 if unspecified."),
    }),
    annotations: {
        title: "List Top Crashlytics Versions.",
        readOnlyHint: true,
    },
    _meta: {
        requiresAuth: true,
    },
}, async ({ app_id, issue_id, version_count }) => {
    if (!app_id)
        return (0, util_1.mcpError)(`Must specify 'app_id' parameter.`);
    version_count !== null && version_count !== void 0 ? version_count : (version_count = 10);
    return (0, util_1.toContent)(await (0, listTopVersions_1.listTopVersions)(app_id, version_count, issue_id));
});
