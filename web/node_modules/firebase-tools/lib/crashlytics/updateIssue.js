"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateIssue = exports.IssueState = void 0;
const logger_1 = require("../logger");
const error_1 = require("../error");
const utils_1 = require("./utils");
var IssueState;
(function (IssueState) {
    IssueState["OPEN"] = "OPEN";
    IssueState["CLOSED"] = "CLOSED";
})(IssueState = exports.IssueState || (exports.IssueState = {}));
async function updateIssue(appId, issueId, state) {
    const requestProjectNumber = (0, utils_1.parseProjectNumber)(appId);
    try {
        logger_1.logger.debug(`[mcp][crashlytics] updateIssue called with appId: ${appId}, issueId: ${issueId}, state: ${state}`);
        const response = await utils_1.CRASHLYTICS_API_CLIENT.request({
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
            },
            path: `/projects/${requestProjectNumber}/apps/${appId}/issues/${issueId}`,
            queryParams: { updateMask: "state" },
            body: { state },
            timeout: utils_1.TIMEOUT,
        });
        return response.body;
    }
    catch (err) {
        logger_1.logger.debug(err.message);
        throw new error_1.FirebaseError(`Failed to update issue ${issueId} for app ${appId}. Error: ${err}.`, {
            original: err,
        });
    }
}
exports.updateIssue = updateIssue;
