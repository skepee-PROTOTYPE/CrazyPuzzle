"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.listNotes = void 0;
const logger_1 = require("../logger");
const error_1 = require("../error");
const utils_1 = require("./utils");
async function listNotes(appId, issueId, noteCount) {
    const requestProjectNumber = (0, utils_1.parseProjectNumber)(appId);
    try {
        const queryParams = new URLSearchParams();
        queryParams.set("page_size", `${noteCount}`);
        logger_1.logger.debug(`[mcp][crashlytics] listNotes called with appId: ${appId}, issueId: ${issueId}, noteCount: ${noteCount}`);
        const response = await utils_1.CRASHLYTICS_API_CLIENT.request({
            method: "GET",
            headers: {
                "Content-Type": "application/json",
            },
            path: `/projects/${requestProjectNumber}/apps/${appId}/issues/${issueId}/notes`,
            queryParams: queryParams,
            timeout: utils_1.TIMEOUT,
        });
        return response.body;
    }
    catch (err) {
        logger_1.logger.debug(err.message);
        throw new error_1.FirebaseError(`Failed to fetch notes for issue ${issueId} for app ${appId}. Error: ${err}.`, { original: err });
    }
}
exports.listNotes = listNotes;
