"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.listTopDevices = void 0;
const logger_1 = require("../logger");
const error_1 = require("../error");
const utils_1 = require("./utils");
async function listTopDevices(appId, deviceCount, issueId) {
    const requestProjectNumber = (0, utils_1.parseProjectNumber)(appId);
    const platformPath = (0, utils_1.parsePlatform)(appId);
    try {
        const queryParams = new URLSearchParams();
        queryParams.set("page_size", `${deviceCount}`);
        if (issueId) {
            queryParams.set("filter.issue.id", issueId);
        }
        logger_1.logger.debug(`[mcp][crashlytics] listTopDevices called with appId: ${appId}, deviceCount: ${deviceCount}, issueId: ${issueId}`);
        const response = await utils_1.CRASHLYTICS_API_CLIENT.request({
            method: "GET",
            headers: {
                "Content-Type": "application/json",
            },
            path: `/projects/${requestProjectNumber}/apps/${appId}/reports/${platformPath}`,
            queryParams: queryParams,
            timeout: utils_1.TIMEOUT,
        });
        return response.body;
    }
    catch (err) {
        logger_1.logger.debug(err.message);
        throw new error_1.FirebaseError(`Failed to fetch the top devices for the Firebase app id: ${appId}. Error: ${err}.`, { original: err });
    }
}
exports.listTopDevices = listTopDevices;
