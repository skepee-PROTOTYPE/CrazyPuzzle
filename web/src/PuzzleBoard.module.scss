/* PuzzleBoard specific styles */

$tile-size: 60px;
$tile-gap: 10px;
$tile-border-radius: 8px;
$tile-bg: #eee;
$tile-border: #ccc;
$tile-success: #4caf50;
$board-padding: 20px;

$primary: #1976d2;

.boardCard {
  margin-top: 30px;
  padding: $board-padding;
  border: 1px solid #ccc;
  border-radius: 12px;
  background: #fff;
  color: #333;
  box-shadow: 0 2px 8px rgba(33, 150, 243, 0.06);
}

.boardTitle {
  color: $primary;
  margin-bottom: 16px;
  font-weight: 700;
  font-size: 1.25rem;
}

/* Puzzle container - centralizes the puzzle grid and adds spacing */
.puzzleContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin: 20px 0;

  @media (max-width: 768px) {
    gap: 15px;
    margin: 15px 0;
  }
}

/* Puzzle grid - uses CSS variable --grid-size */
.puzzleGrid {
  display: grid;
  gap: 2px;
  background: #ddd;
  border: 2px solid #333;
  border-radius: 8px;
  padding: 4px;

  // Easy difficulty (3x3 = 9 pieces)
  &.easy {
    grid-template-columns: repeat(3, 1fr);
    width: min(300px, 90vw);
    height: min(300px, 90vw);

    @media (max-width: 480px) {
      width: min(280px, 85vw);
      height: min(280px, 85vw);
    }
  }

  // Medium difficulty (4x4 = 16 pieces)
  &.medium {
    grid-template-columns: repeat(4, 1fr);
    width: min(320px, 90vw);
    height: min(320px, 90vw);

    @media (max-width: 480px) {
      width: min(300px, 85vw);
      height: min(300px, 85vw);
    }
  }

  // Hard difficulty (5x5 = 25 pieces)
  &.hard {
    grid-template-columns: repeat(5, 1fr);
    width: min(350px, 90vw);
    height: min(350px, 90vw);

    @media (max-width: 480px) {
      width: min(320px, 85vw);
      height: min(320px, 85vw);
    }
  }
}

/* Tile card */
.tile {
  width: $tile-size;
  height: $tile-size;
  background: $tile-bg;
  border: 2px solid $tile-border;
  border-radius: $tile-border-radius;
  cursor: pointer;
  transition: all 0.3s ease;

  &.matched {
    background: $tile-success;
    color: #fff;
    border-color: darken($tile-success, 10%);
  }
}

/* Puzzle piece - individual pieces of the puzzle */
.puzzlePiece {
  background: #f0f0f0;
  border: 1px solid #999;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
  aspect-ratio: 1;

  // Dynamic sizing based on grid size
  .easy & {
    font-size: clamp(16px, 4vw, 24px);
    min-height: 80px;

    @media (max-width: 480px) {
      font-size: clamp(14px, 4vw, 20px);
      min-height: 70px;
    }
  }

  .medium & {
    font-size: clamp(14px, 3.5vw, 20px);
    min-height: 60px;

    @media (max-width: 480px) {
      font-size: clamp(12px, 3vw, 18px);
      min-height: 55px;
    }
  }

  .hard & {
    font-size: clamp(12px, 3vw, 18px);
    min-height: 50px;

    @media (max-width: 480px) {
      font-size: clamp(10px, 2.5vw, 16px);
      min-height: 45px;
    }
  }

  &:hover {
    background: #e0e0e0;
    transform: scale(1.05);
  }

  &.empty {
    background: #ccc;
    cursor: default;

    &:hover {
      background: #ccc;
      transform: none;
    }
  }

  &.selected {
    background: #ffeb3b;
    border-color: #ff9800;
    transform: scale(1.1);
  }
}

/* Flip effect */
.tileInner {
  width: 100%;
  height: 100%;
  transition: transform 0.45s;
  transform-style: preserve-3d;
  position: relative;
}

.tileFront,
.tileBack {
  position: absolute;
  inset: 0;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: inherit;
}

/* Hidden face */
.tileFront {
  background: $tile-bg;
  color: transparent;
}

/* Visible face when flipped */
.tileBack {
  transform: rotateY(180deg);
  background: $tile-success;
  color: #fff;
  font-weight: 700;
}

/* When flipped */
.tile.flipped .tileInner {
  transform: rotateY(180deg);
}

/* Matched state */
.tile.matched {
  background: var(--tile-success);
  color: #fff;
  /* Simple: use the CSS variable as border color */
  border-color: var(--tile-success);

  /* Optional: if you want a slightly darker border and target modern browsers,
     you can use color-mix (with a fallback to the var). Uncomment if desired:
  border-color: color-mix(in srgb, var(--tile-success) 85%, black 15%);
  */
}

/* Image inside tile */
.tileImg {
  width: 40px;
  height: 40px;
  object-fit: contain;
}

/* Congrats message */
.congratsMsg {
  margin-top: 20px;
  color: $tile-success;
  font-weight: bold;
  font-size: 1.1rem;
  text-align: center;
}

/* Animations */
@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  20% { transform: translateY(-10%); }
  40% { transform: translateY(-6%); }
  60% { transform: translateY(-10%); }
  80% { transform: translateY(-3%); }
}

.animatedBounce {
  animation: bounce 1.2s infinite;
}

/* Button styles */
.btn {
  background: #667eea;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 4px;
  cursor: pointer;

  &:hover {
    background: darken(#667eea, 10%);
  }
}

/* Coming Soon Styles */
.comingSoon {
  text-align: center;
  padding: 60px 20px;
  background: linear-gradient(135deg, #f8f9ff 0%, #e8f2ff 100%);
  border-radius: 12px;
  margin: 20px 0;
  border: 2px dashed #1976d2;
  box-shadow: 0 4px 12px rgba(25, 118, 210, 0.1);
}

.comingSoonIcon {
  font-size: 4rem;
  margin-bottom: 20px;
  animation: bounce 2s infinite;
}

.comingSoonTitle {
  color: #1976d2;
  font-size: 1.8rem;
  font-weight: 700;
  margin-bottom: 15px;
}

.comingSoonText {
  color: #555;
  font-size: 1.1rem;
  margin-bottom: 10px;

  strong {
    color: #1976d2;
    font-weight: 600;
  }
}

.comingSoonSubtext {
  color: #777;
  font-size: 0.95rem;
  font-style: italic;

  strong {
    color: #1976d2;
    font-weight: 600;
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

/* Responsive - scale tiles on smaller screens */
@media (max-width: 480px) {
  .tile {
    width: 48px;
    height: 48px;
  }

  .puzzleGrid {
    grid-template-columns: repeat(var(--grid-size, 4), 48px);
  }

  .boardCard {
    padding: 12px;
  }

  .boardTitle {
    font-size: 1rem;
  }
}

.guestHint {
  background: #e8f5e8;
  color: #2d5a2d;
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 0.9rem;
  margin-top: 10px;
  border-left: 3px solid #4caf50;
}

/* Game controls and status */
.gameControls {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  justify-content: center;

  @media (max-width: 480px) {
    gap: 8px;
    width: 100%;
  }
}

.controlBtn {
  padding: 8px 16px;
  border: none;
  border-radius: 6px;
  background: #2196f3;
  color: white;
  cursor: pointer;
  font-size: 14px;
  transition: background 0.2s ease;

  &:hover {
    background: #1976d2;
  }

  &:disabled {
    background: #ccc;
    cursor: not-allowed;
  }

  @media (max-width: 480px) {
    padding: 6px 12px;
    font-size: 12px;
    flex: 1;
    min-width: 80px;
  }
}

.gameStatus {
  text-align: center;
  margin: 15px 0;

  .statusMessage {
    font-size: 18px;
    font-weight: 600;

    &.won {
      color: #4caf50;
    }

    &.playing {
      color: #2196f3;
    }

    @media (max-width: 480px) {
      font-size: 16px;
    }
  }
}