/* PuzzleBoard specific styles */

$tile-size: 60px;
$tile-gap: 10px;
$tile-border-radius: 8px;
$tile-bg: #eee;
$tile-border: #ccc;
$tile-success: #4caf50;
$board-padding: 20px;

$primary: #1976d2;

.boardCard {
  margin-top: 30px;
  padding: $board-padding;
  border: 1px solid #ccc;
  border-radius: 12px;
  background: #fff;
  color: #333;
  box-shadow: 0 2px 8px rgba(33, 150, 243, 0.06);
}

.boardTitle {
  color: $primary;
  margin-bottom: 16px;
  font-weight: 700;
  font-size: 1.25rem;
}

/* Puzzle grid - uses CSS variable --grid-size */
.puzzleGrid {
  display: grid;
  gap: $tile-gap;
  justify-content: center;
  margin-top: 20px;
  // Use CSS custom property for dynamic grid size
  grid-template-columns: repeat(var(--grid-size, 4), $tile-size);
  transform-style: preserve-3d;
}

/* Tile card */
.tile {
  width: $tile-size;
  height: $tile-size;
  background: $tile-bg;
  border: 2px solid $tile-border;
  border-radius: $tile-border-radius;
  cursor: pointer;
  transition: all 0.3s ease;

  &.matched {
    background: $tile-success;
    color: #fff;
    border-color: darken($tile-success, 10%);
  }
}

/* Flip effect */
.tileInner {
  width: 100%;
  height: 100%;
  transition: transform 0.45s;
  transform-style: preserve-3d;
  position: relative;
}

.tileFront,
.tileBack {
  position: absolute;
  inset: 0;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: inherit;
}

/* Hidden face */
.tileFront {
  background: $tile-bg;
  color: transparent;
}

/* Visible face when flipped */
.tileBack {
  transform: rotateY(180deg);
  background: $tile-success;
  color: #fff;
  font-weight: 700;
}

/* When flipped */
.tile.flipped .tileInner {
  transform: rotateY(180deg);
}

/* Matched state */
.tile.matched {
  background: var(--tile-success);
  color: #fff;
  /* Simple: use the CSS variable as border color */
  border-color: var(--tile-success);

  /* Optional: if you want a slightly darker border and target modern browsers,
     you can use color-mix (with a fallback to the var). Uncomment if desired:
  border-color: color-mix(in srgb, var(--tile-success) 85%, black 15%);
  */
}

/* Image inside tile */
.tileImg {
  width: 40px;
  height: 40px;
  object-fit: contain;
}

/* Congrats message */
.congratsMsg {
  margin-top: 20px;
  color: $tile-success;
  font-weight: bold;
  font-size: 1.1rem;
  text-align: center;
}

/* Animations */
@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  20% { transform: translateY(-10%); }
  40% { transform: translateY(-6%); }
  60% { transform: translateY(-10%); }
  80% { transform: translateY(-3%); }
}

.animatedBounce {
  animation: bounce 1.2s infinite;
}

/* Button styles */
.btn {
  background: #667eea;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 4px;
  cursor: pointer;

  &:hover {
    background: darken(#667eea, 10%);
  }
}

/* Coming Soon Styles */
.comingSoon {
  text-align: center;
  padding: 60px 20px;
  background: linear-gradient(135deg, #f8f9ff 0%, #e8f2ff 100%);
  border-radius: 12px;
  margin: 20px 0;
  border: 2px dashed #bbb;
}

.comingSoonIcon {
  font-size: 4rem;
  margin-bottom: 20px;
  animation: bounce 2s infinite;
}

.comingSoonTitle {
  color: $primary;
  font-size: 1.8rem;
  font-weight: 700;
  margin-bottom: 15px;
}

.comingSoonText {
  color: #555;
  font-size: 1.1rem;
  margin-bottom: 10px;
  
  strong {
    color: $primary;
    font-weight: 600;
  }
}

.comingSoonSubtext {
  color: #777;
  font-size: 0.95rem;
  font-style: italic;
  
  strong {
    color: $primary;
    font-weight: 600;
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

/* Responsive - scale tiles on smaller screens */
@media (max-width: 480px) {
  .tile {
    width: 48px;
    height: 48px;
  }
  
  .puzzleGrid {
    grid-template-columns: repeat(var(--grid-size, 4), 48px);
  }
  
  .boardCard {
    padding: 12px;
  }
  
  .boardTitle {
    font-size: 1rem;
  }
}